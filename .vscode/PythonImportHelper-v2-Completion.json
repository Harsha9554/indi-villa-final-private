[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "auth",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "contacts.models",
        "description": "contacts.models",
        "isExtraImport": true,
        "detail": "contacts.models",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "contacts.models",
        "description": "contacts.models",
        "isExtraImport": true,
        "detail": "contacts.models",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "Agency",
        "importPath": "agencies.models",
        "description": "agencies.models",
        "isExtraImport": true,
        "detail": "agencies.models",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "indivilla",
        "description": "indivilla",
        "isExtraImport": true,
        "detail": "indivilla",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "environ",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "environ",
        "description": "environ",
        "detail": "environ",
        "documentation": {}
    },
    {
        "label": "constants",
        "importPath": "django.contrib.messages",
        "description": "django.contrib.messages",
        "isExtraImport": true,
        "detail": "django.contrib.messages",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Agent",
        "importPath": "agents.models",
        "description": "agents.models",
        "isExtraImport": true,
        "detail": "agents.models",
        "documentation": {}
    },
    {
        "label": "Agent",
        "importPath": "agents.models",
        "description": "agents.models",
        "isExtraImport": true,
        "detail": "agents.models",
        "documentation": {}
    },
    {
        "label": "EmptyPage",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "PageNotAnInteger",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "city_choices",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "state_choices",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "category_choices",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "type_choices",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "bedroom_choices",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "bathroom_choices",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "garage_choices",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "current_status",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "buy_status",
        "importPath": "listings.choices",
        "description": "listings.choices",
        "isExtraImport": true,
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"login\", views.login, name=\"login\"),\n    path(\"signup\", views.signup, name=\"signup\"),\n    path(\"logout\", views.logout, name=\"logout\"),\n    path(\"dashboard\", views.dashboard, name=\"dashboard\"),\n]",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def signup(request):\n    if request.method == \"POST\":\n        first_name = request.POST[\"first_name\"]\n        last_name = request.POST[\"last_name\"]\n        username = request.POST[\"username\"]\n        email = request.POST[\"email\"]\n        password = request.POST[\"password\"]\n        password2 = request.POST[\"password2\"]\n        if password == password2:\n            if User.objects.filter(username=username).exists():",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def login(request):\n    if request.method == \"POST\":\n        print(request.POST)\n        username = request.POST[\"username\"]\n        email = request.POST[\"username\"]\n        password = request.POST[\"password\"]\n        user = auth.authenticate(username=username, password=password)\n        if user is not None:\n            auth.login(request, user)\n            messages.success(request, \"You are now logged in\")",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "logout",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def logout(request):\n    if request.method == \"POST\":\n        auth.logout(request)\n        messages.success(request, \"You are now logged out\")\n        return redirect(\"index\")\ndef dashboard(request):\n    user_contacts = Contact.objects.order_by(\"-contact_date\").filter(user_id=request.user.id)\n    context = {\"contacts\": user_contacts}\n    return render(request, \"accounts/dashboard.html\", context)",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "dashboard",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def dashboard(request):\n    user_contacts = Contact.objects.order_by(\"-contact_date\").filter(user_id=request.user.id)\n    context = {\"contacts\": user_contacts}\n    return render(request, \"accounts/dashboard.html\", context)",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "agencies.migrations.0001_initial",
        "description": "agencies.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Agency',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200)),",
        "detail": "agencies.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "agencies.migrations.0002_alter_agency_options",
        "description": "agencies.migrations.0002_alter_agency_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('agencies', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='agency',\n            options={'verbose_name_plural': 'Agencies'},\n        ),\n    ]",
        "detail": "agencies.migrations.0002_alter_agency_options",
        "documentation": {}
    },
    {
        "label": "AgencyAdmin",
        "kind": 6,
        "importPath": "agencies.admin",
        "description": "agencies.admin",
        "peekOfCode": "class AgencyAdmin(admin.ModelAdmin):\n    list_display = (\n        \"id\",\n        \"name\",\n        \"address\",\n        \"email\",\n    )\nadmin.site.register(Agency, AgencyAdmin)",
        "detail": "agencies.admin",
        "documentation": {}
    },
    {
        "label": "AgenciesConfig",
        "kind": 6,
        "importPath": "agencies.apps",
        "description": "agencies.apps",
        "peekOfCode": "class AgenciesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'agencies'",
        "detail": "agencies.apps",
        "documentation": {}
    },
    {
        "label": "Agency",
        "kind": 6,
        "importPath": "agencies.models",
        "description": "agencies.models",
        "peekOfCode": "class Agency(models.Model):\n    name = models.CharField(max_length=200)\n    address = models.CharField(max_length=200)\n    email = models.CharField(max_length=50)\n    class Meta:\n        verbose_name_plural = \"Agencies\"\n    def __str__(self):\n        return self.name",
        "detail": "agencies.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "agents.migrations.0001_initial",
        "description": "agents.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('agencies', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Agent',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "agents.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AgentAdmin",
        "kind": 6,
        "importPath": "agents.admin",
        "description": "agents.admin",
        "peekOfCode": "class AgentAdmin(admin.ModelAdmin):\n    list_display = (\n        \"id\",\n        \"name\",\n        \"agency\",\n        \"phone\",\n        \"email\",\n        \"date_joined\",\n    )\n    list_display_links = (",
        "detail": "agents.admin",
        "documentation": {}
    },
    {
        "label": "AgentsConfig",
        "kind": 6,
        "importPath": "agents.apps",
        "description": "agents.apps",
        "peekOfCode": "class AgentsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'agents'",
        "detail": "agents.apps",
        "documentation": {}
    },
    {
        "label": "Agent",
        "kind": 6,
        "importPath": "agents.models",
        "description": "agents.models",
        "peekOfCode": "class Agent(models.Model):\n    agency = models.ForeignKey(Agency, on_delete=models.DO_NOTHING)\n    name = models.CharField(max_length=200)\n    photo = models.ImageField(upload_to=\"photos/%Y/%m/%d/\")\n    description = models.TextField(blank=True)\n    phone = models.CharField(max_length=20)\n    email = models.CharField(max_length=50)\n    date_joined = models.DateTimeField(default=datetime.now, blank=True)\n    def __str__(self):\n        return self.name",
        "detail": "agents.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contacts.migrations.0001_initial",
        "description": "contacts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Contact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('listing', models.CharField(max_length=200)),",
        "detail": "contacts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ContactAdmin",
        "kind": 6,
        "importPath": "contacts.admin",
        "description": "contacts.admin",
        "peekOfCode": "class ContactAdmin(admin.ModelAdmin):\n    list_display = (\"id\", \"name\", \"listing\", \"email\", \"contact_date\")\n    list_display_links = (\"id\", \"name\")\n    search_fields = (\"name\", \"email\", \"listing\")\n    list_per_page = 25\nadmin.site.register(Contact, ContactAdmin)",
        "detail": "contacts.admin",
        "documentation": {}
    },
    {
        "label": "ContactsConfig",
        "kind": 6,
        "importPath": "contacts.apps",
        "description": "contacts.apps",
        "peekOfCode": "class ContactsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contacts'",
        "detail": "contacts.apps",
        "documentation": {}
    },
    {
        "label": "Contact",
        "kind": 6,
        "importPath": "contacts.models",
        "description": "contacts.models",
        "peekOfCode": "class Contact(models.Model):\n    listing = models.CharField(max_length=200)\n    listing_id = models.IntegerField()\n    name = models.CharField(max_length=200)\n    email = models.CharField(max_length=100)\n    phone = models.CharField(max_length=100)\n    message = models.TextField(blank=True)\n    contact_date = models.DateTimeField(default=datetime.now)\n    user_id = models.IntegerField(blank=True)\n    def __str__(self):",
        "detail": "contacts.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "contacts.urls",
        "description": "contacts.urls",
        "peekOfCode": "urlpatterns = [path(\"contact\", views.contact, name=\"contact\")]",
        "detail": "contacts.urls",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 2,
        "importPath": "contacts.views",
        "description": "contacts.views",
        "peekOfCode": "def contact(request):\n    if request.method == \"POST\":\n        listing_id = request.POST[\"listing_id\"]\n        listing = request.POST[\"listing\"]\n        name = request.POST[\"name\"]\n        email = request.POST[\"email\"]\n        phone = request.POST[\"phone\"]\n        message = request.POST[\"message\"]\n        user_id = request.POST[\"user_id\"]\n        agent_email = request.POST[\"agent_email\"]",
        "detail": "contacts.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "indivilla.asgi",
        "description": "indivilla.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "indivilla.asgi",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "env = environ.Env()\nenviron.Env.read_env()\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = env(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = env(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\n    \"*\",\n]",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "SECRET_KEY = env(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\n    \"*\",\n]\nSILENCED_SYSTEM_CHECKS = [\"urls.W002\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\n    \"*\",\n]\nSILENCED_SYSTEM_CHECKS = [\"urls.W002\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\n    \"*\",\n]\nSILENCED_SYSTEM_CHECKS = [\"urls.W002\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "SILENCED_SYSTEM_CHECKS",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "SILENCED_SYSTEM_CHECKS = [\"urls.W002\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"pages.apps.PagesConfig\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"pages.apps.PagesConfig\",\n    \"listings.apps.ListingsConfig\",\n    \"agents.apps.AgentsConfig\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"indivilla.urls\"",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "ROOT_URLCONF = \"indivilla.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "WSGI_APPLICATION = \"indivilla.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": env(\"DATABASE_NAME\"),\n        \"USER\": env(\"DATABASE_USER\"),\n        \"PASSWORD\": env(\"DATABASE_PASSWORD\"),\n        \"HOST\": env(\"DATABASE_HOST\"),",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": env(\"DATABASE_NAME\"),\n        \"USER\": env(\"DATABASE_USER\"),\n        \"PASSWORD\": env(\"DATABASE_PASSWORD\"),\n        \"HOST\": env(\"DATABASE_HOST\"),\n    }\n}\n# Password validation",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]\n# Media Folder Settings",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]\n# Media Folder Settings\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]\n# Media Folder Settings\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]\n# Media Folder Settings\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]\n# Media Folder Settings\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nMESSAGE_TAGS = {",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]\n# Media Folder Settings\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nMESSAGE_TAGS = {\n    messages.ERROR: \"danger\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "STATICFILES_DIRS = [os.path.join(BASE_DIR, \"indivilla/static\")]\n# Media Folder Settings\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nMESSAGE_TAGS = {\n    messages.ERROR: \"danger\",\n    messages.SUCCESS: \"success\",",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nMESSAGE_TAGS = {\n    messages.ERROR: \"danger\",\n    messages.SUCCESS: \"success\",\n}\nEMAIL_HOST = \"smtp.gmail.com\"",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nMESSAGE_TAGS = {\n    messages.ERROR: \"danger\",\n    messages.SUCCESS: \"success\",\n}\nEMAIL_HOST = \"smtp.gmail.com\"\nEMAIL_PORT = 587",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nMESSAGE_TAGS = {\n    messages.ERROR: \"danger\",\n    messages.SUCCESS: \"success\",\n}\nEMAIL_HOST = \"smtp.gmail.com\"\nEMAIL_PORT = 587\nEMAIL_HOST_USER = env(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = env(\"EMAIL_HOST_PASSWORD\")\nEMAIL_USE_TLS = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TAGS",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "MESSAGE_TAGS = {\n    messages.ERROR: \"danger\",\n    messages.SUCCESS: \"success\",\n}\nEMAIL_HOST = \"smtp.gmail.com\"\nEMAIL_PORT = 587\nEMAIL_HOST_USER = env(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = env(\"EMAIL_HOST_PASSWORD\")\nEMAIL_USE_TLS = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "EMAIL_HOST = \"smtp.gmail.com\"\nEMAIL_PORT = 587\nEMAIL_HOST_USER = env(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = env(\"EMAIL_HOST_PASSWORD\")\nEMAIL_USE_TLS = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_HOST_USER = env(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = env(\"EMAIL_HOST_PASSWORD\")\nEMAIL_USE_TLS = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "EMAIL_HOST_USER = env(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = env(\"EMAIL_HOST_PASSWORD\")\nEMAIL_USE_TLS = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = env(\"EMAIL_HOST_PASSWORD\")\nEMAIL_USE_TLS = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "indivilla.settings",
        "description": "indivilla.settings",
        "peekOfCode": "EMAIL_USE_TLS = True",
        "detail": "indivilla.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "indivilla.urls",
        "description": "indivilla.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(\"pages.urls\")),\n    path(\"listings\", include(\"listings.urls\")),\n    path(\"admin/\", admin.site.urls),\n    path(\"accounts/\", include(\"accounts.urls\")),\n    path(\"contacts/\", include(\"contacts.urls\")),\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "indivilla.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "indivilla.wsgi",
        "description": "indivilla.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "indivilla.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "listings.migrations.0001_initial",
        "description": "listings.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('agents', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Listing',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "listings.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "listings.migrations.0002_alter_listing_listing_category",
        "description": "listings.migrations.0002_alter_listing_listing_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('listings', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='listing',\n            name='listing_category',\n            field=models.CharField(choices=[('House', 'House'), ('Apartment', 'Apartment'), ('Office', 'Office'), ('PG', 'Pg'), ('Hostel', 'Hostel'), ('Villa', 'Villa'), ('Other', 'Other')], default='House', max_length=15),\n        ),",
        "detail": "listings.migrations.0002_alter_listing_listing_category",
        "documentation": {}
    },
    {
        "label": "ListingAdmin",
        "kind": 6,
        "importPath": "listings.admin",
        "description": "listings.admin",
        "peekOfCode": "class ListingAdmin(admin.ModelAdmin):\n    list_display = (\n        \"id\",\n        \"title\",\n        \"is_published\",\n        \"price\",\n        \"list_date\",\n        \"city\",\n        \"state\",\n    )",
        "detail": "listings.admin",
        "documentation": {}
    },
    {
        "label": "ListingsConfig",
        "kind": 6,
        "importPath": "listings.apps",
        "description": "listings.apps",
        "peekOfCode": "class ListingsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'listings'",
        "detail": "listings.apps",
        "documentation": {}
    },
    {
        "label": "city_choices",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "city_choices = {\n    \"bengaluru\": \"Bengaluru\",\n    \"hyderabad\": \"Hyderabad\",\n    \"mangaluru\": \"Mangaluru\",\n}\nstate_choices = {\n    \"andhra pradesh\": \"Andhra Pradesh\",\n    \"karnataka\": \"Karnataka\",\n    \"telangana\": \"Telangana\",\n}",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "state_choices",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "state_choices = {\n    \"andhra pradesh\": \"Andhra Pradesh\",\n    \"karnataka\": \"Karnataka\",\n    \"telangana\": \"Telangana\",\n}\ncategory_choices = {\n    \"house\": \"House\",\n    \"apartment\": \"Apartment\",\n    \"office\": \"Office\",\n    \"villa\": \"Villa\",",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "category_choices",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "category_choices = {\n    \"house\": \"House\",\n    \"apartment\": \"Apartment\",\n    \"office\": \"Office\",\n    \"villa\": \"Villa\",\n}\ntype_choices = {\n    \"residential\": \"Residential\",\n    \"land\": \"Land\",\n    \"commercial\": \"Commercial\",",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "type_choices",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "type_choices = {\n    \"residential\": \"Residential\",\n    \"land\": \"Land\",\n    \"commercial\": \"Commercial\",\n}\nbedroom_choices = {\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "bedroom_choices",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "bedroom_choices = {\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n}\nbathroom_choices = {\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "bathroom_choices",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "bathroom_choices = {\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n}\ngarage_choices = {\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "garage_choices",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "garage_choices = {\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n}\ncurrent_status = {\n    \"UNDER-CONSTRUCTION\": \"Under-Construction\",\n    \"COMPLETED\": \"Completed\",\n}",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "current_status",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "current_status = {\n    \"UNDER-CONSTRUCTION\": \"Under-Construction\",\n    \"COMPLETED\": \"Completed\",\n}\nbuy_status = {\n    \"SALE\": \"Sale\",\n    \"RENT\": \"Rent\",\n}",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "buy_status",
        "kind": 5,
        "importPath": "listings.choices",
        "description": "listings.choices",
        "peekOfCode": "buy_status = {\n    \"SALE\": \"Sale\",\n    \"RENT\": \"Rent\",\n}",
        "detail": "listings.choices",
        "documentation": {}
    },
    {
        "label": "Listing",
        "kind": 6,
        "importPath": "listings.models",
        "description": "listings.models",
        "peekOfCode": "class Listing(models.Model):\n    class ListingCategory(models.TextChoices):\n        HOUSE = \"House\"\n        APARTMENT = \"Apartment\"\n        OFFICE = \"Office\"\n        PG = \"PG\"\n        HOSTEL = \"Hostel\"\n        VILLA = \"Villa\"\n        OTHER = \"Other\"\n    class ListingType(models.TextChoices):",
        "detail": "listings.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "listings.urls",
        "description": "listings.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.index, name=\"listings\"),\n    path(\"/<int:listing_id>\", views.listing, name=\"listing\"),\n]",
        "detail": "listings.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "listings.views",
        "description": "listings.views",
        "peekOfCode": "def index(request):\n    if not request.method == \"POST\":\n        listings = Listing.objects.order_by(\"-list_date\")\n        paginator = Paginator(listings, 5)\n        page = request.GET.get(\"page\")\n        paged_listings = paginator.get_page(page)\n        context = {\n            \"listings\": paged_listings,\n            \"city_choices\": city_choices,\n            \"state_choices\": state_choices,",
        "detail": "listings.views",
        "documentation": {}
    },
    {
        "label": "listing",
        "kind": 2,
        "importPath": "listings.views",
        "description": "listings.views",
        "peekOfCode": "def listing(request, listing_id):\n    listing = get_object_or_404(Listing, pk=listing_id)\n    agent = get_object_or_404(Agent, name=listing.agent)\n    context = {\"listing\": listing, \"agent\": agent}\n    return render(request, \"listings/listing.html\", context)\ndef search(request):\n    return render(request, \"listings/search.html\")",
        "detail": "listings.views",
        "documentation": {}
    },
    {
        "label": "search",
        "kind": 2,
        "importPath": "listings.views",
        "description": "listings.views",
        "peekOfCode": "def search(request):\n    return render(request, \"listings/search.html\")",
        "detail": "listings.views",
        "documentation": {}
    },
    {
        "label": "PagesConfig",
        "kind": 6,
        "importPath": "pages.apps",
        "description": "pages.apps",
        "peekOfCode": "class PagesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'pages'",
        "detail": "pages.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pages.urls",
        "description": "pages.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.index, name=\"index\"),\n    path(\"about\", views.about, name=\"about\"),\n]",
        "detail": "pages.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "pages.views",
        "description": "pages.views",
        "peekOfCode": "def index(request):\n    return render(request, \"pages/index.html\")\ndef about(request):\n    return render(request, \"pages/about.html\")",
        "detail": "pages.views",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "pages.views",
        "description": "pages.views",
        "peekOfCode": "def about(request):\n    return render(request, \"pages/about.html\")",
        "detail": "pages.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'indivilla.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]